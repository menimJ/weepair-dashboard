[{"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/App.js":"1","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/NavBar/index.js":"2","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/index.js":"3","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/UserIcon/index.js":"4","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/Layout/Home/index.js":"5","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/reportWebVitals.js":"6","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/Layout/Join/index.js":"7","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/Loading/index.js":"8","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/FormDialog/index.js":"9","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/localStorage/groups/index.js":"10","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/api/groups/index.js":"11","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/urls.js":"12","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/utils/general/index.js":"13","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/CreateDialog/index.js":"14"},{"size":777,"mtime":1607873716039,"results":"15","hashOfConfig":"16"},{"size":1801,"mtime":1607874230677,"results":"17","hashOfConfig":"16"},{"size":500,"mtime":1606939540250,"results":"18","hashOfConfig":"16"},{"size":1232,"mtime":1606946299080,"results":"19","hashOfConfig":"16"},{"size":6941,"mtime":1607874873917,"results":"20","hashOfConfig":"16"},{"size":362,"mtime":1606939540252,"results":"21","hashOfConfig":"16"},{"size":5395,"mtime":1607873696956,"results":"22","hashOfConfig":"16"},{"size":411,"mtime":1607087447471,"results":"23","hashOfConfig":"16"},{"size":5907,"mtime":1607525827658,"results":"24","hashOfConfig":"16"},{"size":255,"mtime":1607448987716,"results":"25","hashOfConfig":"16"},{"size":894,"mtime":1607795364895,"results":"26","hashOfConfig":"16"},{"size":76,"mtime":1607520823378,"results":"27","hashOfConfig":"16"},{"size":788,"mtime":1607873441286,"results":"28","hashOfConfig":"16"},{"size":6289,"mtime":1607872928532,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1493dwj",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/App.js",[],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/NavBar/index.js",[],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/index.js",[],["65","66"],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/UserIcon/index.js",["67","68"],"import React, { useState } from \"react\"\nimport Menu from \"@material-ui/core/Menu\"\nimport AccountCircle from \"@material-ui/icons/AccountCircle\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\n\n\nconst UserIcon = () => {\n  const [open, setOpen] = useState(false)\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  const handleClose = () =>  setOpen(false);\n\n  const handleMenu = (event) => setAnchorEl(event.currentTarget)\n  \n  return (\n    <div>\n      <IconButton\n        aria-label=\"account of current user\"\n        aria-controls=\"menu-appbar\"\n        aria-haspopup=\"true\"\n        onClick={handleMenu}\n        color=\"inherit\"\n      >\n      <AccountCircle color=\"primary\" />\n      </IconButton>\n      <Menu\n        id=\"menu-appbar\"\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        keepMounted\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        // open={true}\n        onClose={handleClose}\n      >\n        {/* <MenuItem>Profile</MenuItem> */}\n        {/* <MenuItem>SIGN OUT</MenuItem> */}\n      </Menu>\n    </div>\n  )\n}\n\nexport default UserIcon\n","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/Layout/Home/index.js",["69","70"],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/reportWebVitals.js",[],["71","72"],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/Layout/Join/index.js",["73","74"],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/Loading/index.js",[],["75","76"],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/FormDialog/index.js",["77"],"import React from \"react\"\n// material ui imports\nimport Button from \"@material-ui/core/Button\"\nimport CheckIcon from \"@material-ui/icons/Check\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport Fab from \"@material-ui/core/Fab\"\nimport { green } from \"@material-ui/core/colors\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { Typography } from \"@material-ui/core\"\n// relative imports\nimport Loading from \"../Loading\"\nimport { viewMatch } from \"../../api/groups\"\n// 3rd party\nimport { handleNotification } from \"../../utils/general\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    display: \"inline\",\n  },\n\n  removeDecoration: {\n    // color:\"#333\",\n    textDecoration: \"none\",\n    \"&:hover\": {\n      // color:\"#333\"\n    },\n  },\n\n  buttonProgress: {\n    backgroundColor: green[500],\n    width: \"8rem\",\n    height: \"8rem\",\n    marginBottom: theme.spacing(3),\n    \"&:hover\": {\n      backgroundColor: green[500],\n    },\n  },\n\n  fab: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n\n  height: {\n    width: \"100%\",\n    height: \"10rem\",\n  },\n\n  center: {\n    textAlign: \"center\",\n  },\n}))\nexport default function FormDialog({ open, handleClose }) {\n  const classes = useStyles()\n  const [data, setData] = React.useState({\n    username: \"\",\n    groupID: \"\",\n  })\n  const [state, setState] = React.useState({\n    loading: false,\n    pairInfo: false,\n    partnerInfo: {\n      name: \"\",\n      comment: \"\",\n      link: \"\",\n    },\n  })\n\n  const loadData = () => {\n    setState({ ...state, loading: true })\n    console.log({ username: data.username, groupID: data.groupID })\n\n    const details = {\n      username: data.username,\n      groupID: data.groupID,\n    }\n    viewMatch(details, success, failed)\n    // setTimeout(() => setState(...state, (state.loading = false)), 5000)\n  }\n\n  const handleUserInput = (name) => (event) =>\n    setData({ ...data, [name]: event.target.value })\n\n  const success = (name, comment, link) => {\n    setState({\n      ...state,\n      loading: false,\n      pairInfo: true,\n      partnerInfo: {\n        name,\n        comment,\n        link,\n      },\n    })\n    handleNotification(\"success\", \"izz working oon\", \"success\")\n  }\n  const failed = (message) => {\n    handleNotification(\"FAILED\", message)\n    setState({ ...state, loading: false })\n  }\n\n  const PairInfo = ({ name, comment, link }) => {\n    // const { name, comment, link } = state.partnerInfo\n    console.log(name, comment, link, \"working\")\n    return (\n      <Dialog\n        fullWidth={true}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <div className={classes.wrapper}>\n          <DialogContent>\n            <DialogContentText>\n              <div className={classes.fab}>\n                <Fab\n                  aria-label=\"save\"\n                  color=\"primary\"\n                  className={classes.buttonProgress}\n                  size={\"large\"}\n                >\n                  <CheckIcon style={{ fontSize: 60 }} />\n                </Fab>\n              </div>\n              <div className={classes.center}>\n                You've were paired with{\" \"}\n                <Typography className={classes.title} variant=\"h6\">\n                  {name}{\" \"}\n                </Typography>\n                he dropped the following comments:{\" \"}\n                <Typography className={classes.title} variant=\"p\">\n                  {comment}{\" \"}\n                </Typography>\n                {link ? (\n                  <Typography className={classes.title} variant=\"p\">\n                    and suggested you view this{\" \"}\n                    <a\n                      target=\"_blank\"\n                      className={classes.removeDecoration}\n                      href={\"https://\" + link}\n                    >\n                      LINK\n                    </a>\n                  </Typography>\n                ) : (\n                  \".\"\n                )}\n              </div>\n            </DialogContentText>\n          </DialogContent>\n        </div>\n      </Dialog>\n    )\n  }\n  //\n\n  return state.pairInfo ? (\n    <PairInfo\n      name={state.partnerInfo.name}\n      comment={state.partnerInfo.comment}\n      link={state.partnerInfo.link}\n    />\n  ) : (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Find Match</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          To find out who you've been matched with, please enter your usernname and\n          group id. We'll get that info in a minute.\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"normal\"\n          id=\"name\"\n          label=\"User Name\"\n          type=\"text\"\n          fullWidth\n          value={data.username}\n          required\n          onChange={handleUserInput(\"username\")}\n        />\n        <TextField\n          margin=\"normal\"\n          id=\"name\"\n          label=\"Group ID\"\n          type=\"text\"\n          fullWidth\n          required\n          value={data.groupID}\n          onChange={handleUserInput(\"groupID\")}\n        />\n      </DialogContent>\n      <DialogActions>\n        {state.loading ? (\n          <div style={{ margin: \"0 auto\" }}>\n            <Loading />\n          </div>\n        ) : (\n          <React.Fragment>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={loadData} color=\"primary\">\n              Find\n            </Button>\n          </React.Fragment>\n        )}\n      </DialogActions>\n    </Dialog>\n  )\n}\n","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/localStorage/groups/index.js",[],["78","79"],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/api/groups/index.js",["80"],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/urls.js",[],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/utils/general/index.js",[],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/CreateDialog/index.js",["81"],"import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport clsx from \"clsx\"\n\n\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\"\nimport Button from \"@material-ui/core/Button\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\n\nimport { Link, useHistory } from \"react-router-dom\"\n\nimport { createGroup } from \"../../api/groups\"\nimport { HOME, JOIN } from \"../../urls\"\nimport {\n  handleNotification,\n  copyToClipboard,\n  generateGroupLink,\n} from \"../../utils/general\"\nimport Loading from \"../Loading\"\nimport teal from \"@material-ui/core/colors/teal\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  centerText: {\n    textAlign: \"center\",\n  },\n\n  root: {\n    \"& .MuiInputBase-input\": {\n      textAlign: \"center\",\n    },\n  },\n\n  listRoot: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n\n  inline: {\n    display: \"inline-block\",\n    backgroundColor: \"blue\",\n  },\n\n  pointer: {\n    cursor: \"pointer\",\n  },\n\n  MuiInputUnderline: {\n    \"&::before\": {\n      // remove dotted lines\n      content: \"none\",\n    },\n  },\n  MuiInputBaseInput: {\n    textAlign: \"center\",\n  },\n\n  centerBlock: {\n    display: \"block\",\n    textAlign: \"center\",\n  },\n  normalizeLink: {\n    color: \"inherit\",\n    textDecoration: \"none\",\n    \"&:hover\": {\n      color: \"inherit\",\n      textDecoration: \"none\",\n    },\n  },\n}))\n\nexport default function CreateDialog({open, handleClose }) {\n  const history = useHistory()\n  const [data, setData] = React.useState({\n    username: \"\",\n    name: \"\",\n  })\n  const text = React.useRef(null)\n\n  const [state, setState] = React.useState({\n    created: false,\n    loading: false,\n    groupId: \"\",\n  })\n\n  const handleUserInput = (name) => (event) =>\n    setData({ ...data, [name]: event.target.value })\n\n  const success = (groupID) => {\n    console.log(\"success\")\n    setState({\n      ...state,\n      created: true,\n      loading: false,\n      groupId: groupID,\n    })\n  }\n\n  const failed = (message) => {\n    handleNotification(\"ERROR\", message)\n    history.push(HOME)\n  }\n\n  const handleCreateGroup = () => {\n    setState({\n      ...state,\n      loading: true,\n    })\n    createGroup(data, success, failed)\n  }\n\n  const clearGroupID = () => {\n    setState({\n      ...state,\n      created: false,\n      groupId: \"\",\n    })\n    handleClose()\n  }\n\n  function GroupCreated({ clearGroupID, groupId }) {\n    const classes = useStyles()\n    const [open, setOpen] = React.useState(true)\n\n    const handleClickOpen = () => {\n      setOpen(true)\n    }\n\n    return (\n      <div>\n        <Dialog\n          open={open}\n          fullWidth={true}\n          // onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            <div className={classes.centerText}>{\"Please copy your Group ID\"}</div>\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              <TextField\n                id=\"outlined-read-only-input\"\n                defaultValue={generateGroupLink(groupId)}\n                disabled\n                onClick={(e) => {\n                  copyToClipboard(text)\n                }}\n                fullWidth={true}\n                multiline\n                inputRef={text}\n                InputProps={{\n                  readOnly: true,\n                  endAdornment: document.queryCommandSupported(\"copy\") && (\n                    <InputAdornment position=\"end\">\n                      <FileCopyIcon />\n                    </InputAdornment>\n                  ),\n                  style: {\n                    cursor: \"pointer\",\n                    fontWeight: \"400\",\n                    color: teal[\"500\"],\n                  },\n                  className: classes.MuiInputUnderline,\n                }}\n                className={clsx(classes.pointer, classes.root)}\n              />\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={clearGroupID} color=\"primary\">\n              <Link to={JOIN + \"/\" + groupId} className={classes.normalizeLink}>\n                JOIN GROUP\n              </Link>\n            </Button>\n            <Button onClick={clearGroupID} color=\"primary\">\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n\n  return state.created ? (\n    <GroupCreated clearGroupID={clearGroupID} groupId={state.groupId} />\n  ) : (\n    <div>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Create Group</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            please enter your prefred username and group name, give us a couple\n            seconds and your group id will be generated.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"normal\"\n            id=\"name\"\n            label=\"User Name\"\n            type=\"text\"\n            fullWidth\n            value={data.username}\n            required\n            onChange={handleUserInput(\"username\")}\n          />\n          <TextField\n            margin=\"normal\"\n            id=\"name\"\n            label=\"Group Name\"\n            type=\"text\"\n            fullWidth\n            value={data.name}\n            required\n            onChange={handleUserInput(\"name\")}\n          />\n        </DialogContent>\n        <DialogActions>\n          {state.loading ? (\n            <Loading />\n          ) : (\n            <React.Fragment>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button onClick={handleCreateGroup} color=\"primary\">\n                Create\n              </Button>\n            </React.Fragment>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":5,"column":8,"nodeType":"88","messageId":"89","endLine":5,"endColumn":16},{"ruleId":"86","severity":1,"message":"90","line":9,"column":10,"nodeType":"88","messageId":"89","endLine":9,"endColumn":14},{"ruleId":"86","severity":1,"message":"91","line":114,"column":10,"nodeType":"88","messageId":"89","endLine":114,"endColumn":30},{"ruleId":"86","severity":1,"message":"92","line":114,"column":32,"nodeType":"88","messageId":"89","endLine":114,"endColumn":55},{"ruleId":"82","replacedBy":"93"},{"ruleId":"84","replacedBy":"94"},{"ruleId":"86","severity":1,"message":"95","line":16,"column":10,"nodeType":"88","messageId":"89","endLine":16,"endColumn":20},{"ruleId":"86","severity":1,"message":"96","line":17,"column":22,"nodeType":"88","messageId":"89","endLine":17,"endColumn":32},{"ruleId":"82","replacedBy":"97"},{"ruleId":"84","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":144,"column":23,"nodeType":"101","endLine":144,"endColumn":38},{"ruleId":"82","replacedBy":"102"},{"ruleId":"84","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":7,"column":31,"nodeType":"106","messageId":"107","endLine":7,"endColumn":32},{"ruleId":"86","severity":1,"message":"108","line":132,"column":11,"nodeType":"88","messageId":"89","endLine":132,"endColumn":26},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'open' is assigned a value but never used.","'openCloseGroupDialog' is assigned a value but never used.","'setOpenCloseGroupDialog' is assigned a value but never used.",["109"],["110"],"'getGroupID' is defined but never used.","'withRouter' is defined but never used.",["109"],["110"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["109"],["110"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'handleClickOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]