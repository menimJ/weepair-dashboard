[{"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/App.js":"1","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/NavBar/index.js":"2","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/index.js":"3","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/UserIcon/index.js":"4","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/Layout/Home/index.js":"5","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/reportWebVitals.js":"6","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/Layout/Join/index.js":"7","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/Loading/index.js":"8","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/localStorage/groups/index.js":"9","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/api/groups/index.js":"10","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/urls.js":"11","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/utils/general/index.js":"12","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/CreateDialog/index.js":"13","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/NotFound/index.js":"14","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/errors.js":"15","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/ViewMatch/index.js":"16"},{"size":862,"mtime":1607958408501,"results":"17","hashOfConfig":"18"},{"size":1801,"mtime":1607874230677,"results":"19","hashOfConfig":"18"},{"size":500,"mtime":1606939540250,"results":"20","hashOfConfig":"18"},{"size":1232,"mtime":1606946299080,"results":"21","hashOfConfig":"18"},{"size":7157,"mtime":1607960247000,"results":"22","hashOfConfig":"18"},{"size":362,"mtime":1606939540252,"results":"23","hashOfConfig":"18"},{"size":6039,"mtime":1607958386528,"results":"24","hashOfConfig":"18"},{"size":690,"mtime":1607956912738,"results":"25","hashOfConfig":"18"},{"size":255,"mtime":1607448987716,"results":"26","hashOfConfig":"18"},{"size":1077,"mtime":1607959100678,"results":"27","hashOfConfig":"18"},{"size":82,"mtime":1607957119139,"results":"28","hashOfConfig":"18"},{"size":1134,"mtime":1607958555973,"results":"29","hashOfConfig":"18"},{"size":6289,"mtime":1607952005041,"results":"30","hashOfConfig":"18"},{"size":1413,"mtime":1607958662687,"results":"31","hashOfConfig":"18"},{"size":50,"mtime":1607959299971,"results":"32","hashOfConfig":"18"},{"size":5953,"mtime":1607960783369,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1493dwj",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/App.js",[],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/NavBar/index.js",[],["74","75"],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/index.js",[],["76","77"],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/UserIcon/index.js",["78","79"],"import React, { useState } from \"react\"\nimport Menu from \"@material-ui/core/Menu\"\nimport AccountCircle from \"@material-ui/icons/AccountCircle\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\n\n\nconst UserIcon = () => {\n  const [open, setOpen] = useState(false)\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  const handleClose = () =>  setOpen(false);\n\n  const handleMenu = (event) => setAnchorEl(event.currentTarget)\n  \n  return (\n    <div>\n      <IconButton\n        aria-label=\"account of current user\"\n        aria-controls=\"menu-appbar\"\n        aria-haspopup=\"true\"\n        onClick={handleMenu}\n        color=\"inherit\"\n      >\n      <AccountCircle color=\"primary\" />\n      </IconButton>\n      <Menu\n        id=\"menu-appbar\"\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        keepMounted\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        // open={true}\n        onClose={handleClose}\n      >\n        {/* <MenuItem>Profile</MenuItem> */}\n        {/* <MenuItem>SIGN OUT</MenuItem> */}\n      </Menu>\n    </div>\n  )\n}\n\nexport default UserIcon\n","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/Layout/Home/index.js",["80","81"],"import React, { useState } from \"react\"\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\nimport TextField from \"@material-ui/core/TextField\"\nimport KeyboardIcon from \"@material-ui/icons/Keyboard\"\nimport Button from \"@material-ui/core/Button\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport NavBar from \"../../components/NavBar\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Container from \"@material-ui/core/Container\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport Menu from \"@material-ui/core/Menu\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport GroupIcon from \"@material-ui/icons/Group\"\n\n\nimport { useHistory } from \"react-router-dom\"\nimport { JOIN } from \"../../urls\"\n\nimport CreateDialog from \"../../components/CreateDialog\"\nimport { generateGroupId } from \"../../utils/general\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontSize: \"2.45rem\",\n    fontWeight: \"400\",\n    letterSpacing: \"0\",\n    lineHeight: \"3.25rem\",\n    paddingBottom: \".5em\",\n  },\n\n  paragraph: {\n    lineHeight: \"1.5rem\",\n    paddingBottom: \".5em\",\n    textAlign: \"justify\",\n  },\n\n  layout: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n      marginTop: theme.spacing(2),\n    },\n    height:\"100vh\",\n    alignItems: \"center\",\n    gap: theme.spacing(2),\n  },\n\n  image: {\n    height: \"500px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      objectFit: \"cover\",\n    },\n  },\n\n  postion: {\n    display: \"flex\",\n    height: \"100vh\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      height: \"auto\",\n    },\n  },\n  content: {\n    textAlign: \"left\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"50%\",\n    },\n  },\n\n  buttonLayout: {\n    marginTop: theme.spacing(3),\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-evenly\",\n    \"& > *\": {\n      marginRight: theme.spacing(3),\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n      \"& > *\": {\n        marginBottom: theme.spacing(3),\n      },\n    },\n  },\n\n \n  split: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    \"& > *\": {\n      marginLeft: theme.spacing(1),\n    },\n  },\n\n  formWidth: {\n    width: \"60%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n}))\n\nexport default function Home() {\n  const classes = useStyles()\n\n  const [openDialog, setOpenDialog] = React.useState(false)\n  const [openCloseGroupDialog, setOpenCloseGroupDialog] = React.useState(false)\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [groupDetails, setGroupDetails] = useState(\"\")\n\n  const open = Boolean(anchorEl)\n  let history = useHistory()\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n  \n  function join (){\n    // verifyGroup \n    // if groupIsValid do stuff\n    const groupId=generateGroupId(groupDetails)\n    if(groupId){\n      history.push(JOIN+\"/\"+groupId)\n    }\n\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    join()\n    \n  }\n\n  const handleMenu = (event) => setAnchorEl(event.currentTarget)\n  const handleChange = (event) => setGroupDetails(event.target.value)\n\n\n  const handleClickOpen = () => {\n    handleClose()\n    // console.log(openDialog, \"openDialog\")\n    setOpenDialog(true)\n  }\n\n  const handleCloseDialgue = () => {\n    setOpenDialog(false)\n  }\n\n  return (\n    <div>\n      <CreateDialog open={openDialog} handleClose={handleCloseDialgue} />\n      <NavBar />\n      <Container maxWidth=\"lg\">\n        <section className={classes.layout}>\n          <div className={classes.content}>\n            <Typography variant=\"h6\" className={classes.title}>\n              Maybe it's a special day for secret santa\n            </Typography>\n            <Typography variant=\"p\" className={classes.paragraph}>\n              It works, the exact same way google meets does. {\"\"} \n            </Typography>\n            <Typography variant=\"p\" className={classes.paragraph}>\n             Only difference is, our links come with actual gifts.{\"\"}\n            </Typography>\n            <Typography variant=\"p\" className={classes.paragraph}>\n              We, know it pretty difficult connecting with your collegues remotely so\n              we designed this specially for you. {\"\"}\n            </Typography>\n            <Typography variant=\"p\" className={classes.paragraph}>\n              Give us a username and we'll give you a suprise. \n            </Typography>\n\n            <div className={classes.buttonLayout}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                disableElevation\n                onClick={handleMenu}\n              >\n                GROUP\n              </Button>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClickOpen}>\n                  <ListItemIcon>\n                    <AddIcon fontSize=\"small\" />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Create Group\" />\n                </MenuItem>\n\n                <MenuItem onClick={handleClose}>\n                  <ListItemIcon>\n                    <GroupIcon fontSize=\"small\" />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Activate Group\" />\n                </MenuItem>\n              </Menu>\n\n              <div className={classes.split}>\n                <FormControl className={classes.formWidth} variant=\"outlined\">\n                  <form onSubmit={handleSubmit}>\n                    <TextField\n                      label=\"GROUP ID\"\n                      id=\"outlined-start-adornment\"\n                      style={{ width: \"100%\" }}\n                      value={groupDetails}\n                      placeholder={\"Enter group link or ID\"}\n                      onChange={handleChange}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <KeyboardIcon />\n                          </InputAdornment>\n                        ),\n                        style:{\n                          fontSize:\"0.9rem\"\n                        }\n                      }}\n                      variant=\"outlined\"\n                    />\n                  </form>\n                </FormControl>\n                <Button onClick={join}>Join</Button>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Container>\n    </div>\n  )\n}\n","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/reportWebVitals.js",[],["82","83"],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/Layout/Join/index.js",["84"],"import React from \"react\"\nimport clsx from \"clsx\"\n// material ui imports\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport NavBar from \"../../components/NavBar\"\nimport Container from \"@material-ui/core/Container\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Avatar from \"@material-ui/core/Avatar\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport FormHelperText from \"@material-ui/core/FormHelperText\"\nimport Button from \"@material-ui/core/Button\"\nimport { deepOrange } from \"@material-ui/core/colors\"\n\n// application imports\nimport { addUserToGroup, verifyGroupID } from \"../../api/groups\"\nimport { useHistory } from \"react-router-dom\"\nimport { HOME, PAGE_NOT_FOUND } from \"../../urls\"\nimport Loading from \"../../components/Loading\"\nimport { handleNotification } from \"../../utils/general\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    gap: theme.spacing(2),\n  },\n\n  width: {\n    minWidth: \"100%\",\n  },\n\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  centerAvatar: {\n    margin: \"0 auto\",\n  },\n\n  center: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    gap: theme.spacing(3),\n  },\n\n  centerPage: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}))\n\nexport default function Join(props) {\n  const classes = useStyles()\n\n  const history = useHistory()\n  const groupId = props.match.params.id\n  const [loading, setLoading] = React.useState(true)\n\n  const [value, setValue] = React.useState({\n    userName: \"\",\n    comment: \"\",\n    name: \"\",\n    link: \"\",\n    loading: false,\n    errorMessage: \"\",\n  })\n\n  async function groupVerification() {\n    const verified = await verifyGroupID(groupId)\n    setLoading(false)\n    if (!verified) {\n      history.push(PAGE_NOT_FOUND + \"/INVALID_GROUP_ID_OR_LINK\")\n    }\n  }\n\n  React.useEffect(() => {\n    groupVerification()\n  }, [])\n\n  const handleUserInput = (name) => (event) =>\n    setValue({ ...value, [name]: event.target.value })\n\n  const success = () => {\n    setValue({ ...value, loading: false })\n    handleNotification(\n      \"SUCCESSFUL\",\n      \"You've successfully joined the group\",\n      \"success\"\n    )\n    history.push(HOME)\n  }\n\n  const failed = (message) => {\n    console.log(\"failed\", message)\n    setValue({ ...value, loading: false, errorMessage: message })\n    handleNotification(\"FAILED\", message)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setValue({ ...value, loading: true })\n    if (groupId) {\n      const member = {\n        username: value.userName,\n        comment: value.comment,\n        name: value.name,\n        link: value.link,\n      }\n      addUserToGroup(groupId, member, success, failed)\n    } else {\n      history.push(HOME)\n    }\n  }\n\n  return loading ? (\n    <div className={classes.root}>\n      <NavBar />\n      <div className={classes.centerPage}>\n        <Loading message={\"FETCHING GROUP...\"} />\n      </div>\n    </div>\n  ) : (\n    <div className={classes.root}>\n      <NavBar />\n      <section className={classes.center}>\n        <Avatar className={clsx(classes.orange, classes.centerAvatar)}>N</Avatar>\n        <Container maxWidth=\"sm\">\n          <form onSubmit={handleSubmit}>\n            <FormControl error className={classes.width}>\n              <FormHelperText id=\"component-error-text\">\n                {value.errorMessage}\n              </FormHelperText>\n              <TextField\n                id=\"outlined-full-width-1\"\n                label=\"Username\"\n                placeholder=\"Exwestafrican\"\n                helperText=\"Give yourself a cool name\"\n                fullWidth\n                margin=\"normal\"\n                value={value.userName}\n                onChange={handleUserInput(\"userName\")}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                required\n              />\n\n              <TextField\n                id=\"outlined-multiline-static\"\n                label=\"Prefrence\"\n                multiline\n                rows={4}\n                placeholder=\"A breif description of what you'd like\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                value={value.comment}\n                onChange={handleUserInput(\"comment\")}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                required\n              />\n\n              <TextField\n                id=\"outlined-full-width-2\"\n                label=\"Slack Name\"\n                placeholder=\"tumise\"\n                helperText=\"What do you get called on slack?\"\n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                value={value.name}\n                onChange={handleUserInput(\"name\")}\n                required\n              />\n\n              <TextField\n                id=\"outlined-full-width-3\"\n                label=\"Product Url\"\n                placeholder=\"jumia.com/cool-stuff/99\"\n                helperText=\"share a link to what you'd like\"\n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                value={value.link}\n                onChange={handleUserInput(\"link\")}\n                required\n              />\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disableElevation\n              >\n                {value.loading ? <Loading /> : \"JOIN\"}\n              </Button>\n            </FormControl>\n          </form>\n        </Container>\n      </section>\n    </div>\n  )\n}\n","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/Loading/index.js",[],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/localStorage/groups/index.js",[],["85","86"],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/api/groups/index.js",["87"],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/urls.js",[],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/utils/general/index.js",[],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/CreateDialog/index.js",["88"],"import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport clsx from \"clsx\"\n\n\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\"\nimport Button from \"@material-ui/core/Button\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\n\nimport { Link, useHistory } from \"react-router-dom\"\n\nimport { createGroup } from \"../../api/groups\"\nimport { HOME, JOIN } from \"../../urls\"\nimport {\n  handleNotification,\n  copyToClipboard,\n  generateGroupLink,\n} from \"../../utils/general\"\nimport Loading from \"../Loading\"\nimport teal from \"@material-ui/core/colors/teal\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  centerText: {\n    textAlign: \"center\",\n  },\n\n  root: {\n    \"& .MuiInputBase-input\": {\n      textAlign: \"center\",\n    },\n  },\n\n  listRoot: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n\n  inline: {\n    display: \"inline-block\",\n    backgroundColor: \"blue\",\n  },\n\n  pointer: {\n    cursor: \"pointer\",\n  },\n\n  MuiInputUnderline: {\n    \"&::before\": {\n      // remove dotted lines\n      content: \"none\",\n    },\n  },\n  MuiInputBaseInput: {\n    textAlign: \"center\",\n  },\n\n  centerBlock: {\n    display: \"block\",\n    textAlign: \"center\",\n  },\n  normalizeLink: {\n    color: \"inherit\",\n    textDecoration: \"none\",\n    \"&:hover\": {\n      color: \"inherit\",\n      textDecoration: \"none\",\n    },\n  },\n}))\n\nexport default function CreateDialog({open, handleClose }) {\n  const history = useHistory()\n  const [data, setData] = React.useState({\n    username: \"\",\n    name: \"\",\n  })\n  const text = React.useRef(null)\n\n  const [state, setState] = React.useState({\n    created: false,\n    loading: false,\n    groupId: \"\",\n  })\n\n  const handleUserInput = (name) => (event) =>\n    setData({ ...data, [name]: event.target.value })\n\n  const success = (groupID) => {\n    console.log(\"success\")\n    setState({\n      ...state,\n      created: true,\n      loading: false,\n      groupId: groupID,\n    })\n  }\n\n  const failed = (message) => {\n    handleNotification(\"ERROR\", message)\n    history.push(HOME)\n  }\n\n  const handleCreateGroup = () => {\n    setState({\n      ...state,\n      loading: true,\n    })\n    createGroup(data, success, failed)\n  }\n\n  const clearGroupID = () => {\n    setState({\n      ...state,\n      created: false,\n      groupId: \"\",\n    })\n    handleClose()\n  }\n\n  function GroupCreated({ clearGroupID, groupId }) {\n    const classes = useStyles()\n    const [open, setOpen] = React.useState(true)\n\n    const handleClickOpen = () => {\n      setOpen(true)\n    }\n\n    return (\n      <div>\n        <Dialog\n          open={open}\n          fullWidth={true}\n          // onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            <div className={classes.centerText}>{\"Please copy your Wee link\"}</div>\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              <TextField\n                id=\"outlined-read-only-input\"\n                defaultValue={generateGroupLink(groupId)}\n                disabled\n                onClick={(e) => {\n                  copyToClipboard(text)\n                }}\n                fullWidth={true}\n                multiline\n                inputRef={text}\n                InputProps={{\n                  readOnly: true,\n                  endAdornment: document.queryCommandSupported(\"copy\") && (\n                    <InputAdornment position=\"end\">\n                      <FileCopyIcon />\n                    </InputAdornment>\n                  ),\n                  style: {\n                    cursor: \"pointer\",\n                    fontWeight: \"400\",\n                    color: teal[\"500\"],\n                  },\n                  className: classes.MuiInputUnderline,\n                }}\n                className={clsx(classes.pointer, classes.root)}\n              />\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={clearGroupID} color=\"primary\">\n              <Link to={JOIN + \"/\" + groupId} className={classes.normalizeLink}>\n                JOIN GROUP\n              </Link>\n            </Button>\n            <Button onClick={clearGroupID} color=\"primary\">\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n\n  return state.created ? (\n    <GroupCreated clearGroupID={clearGroupID} groupId={state.groupId} />\n  ) : (\n    <div>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Create Group</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            please enter your prefred username and group name, give us a couple\n            seconds and your group id will be generated.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"normal\"\n            id=\"name\"\n            label=\"User Name\"\n            type=\"text\"\n            fullWidth\n            value={data.username}\n            required\n            onChange={handleUserInput(\"username\")}\n          />\n          <TextField\n            margin=\"normal\"\n            id=\"name\"\n            label=\"Group Name\"\n            type=\"text\"\n            fullWidth\n            value={data.name}\n            required\n            onChange={handleUserInput(\"name\")}\n          />\n        </DialogContent>\n        <DialogActions>\n          {state.loading ? (\n            <Loading />\n          ) : (\n            <React.Fragment>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button onClick={handleCreateGroup} color=\"primary\">\n                Create\n              </Button>\n            </React.Fragment>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/NotFound/index.js",[],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/errors.js",[],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/ViewMatch/index.js",["89"],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"90","replacedBy":"94"},{"ruleId":"92","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":16},{"ruleId":"96","severity":1,"message":"100","line":9,"column":10,"nodeType":"98","messageId":"99","endLine":9,"endColumn":14},{"ruleId":"96","severity":1,"message":"101","line":115,"column":10,"nodeType":"98","messageId":"99","endLine":115,"endColumn":30},{"ruleId":"96","severity":1,"message":"102","line":115,"column":32,"nodeType":"98","messageId":"99","endLine":115,"endColumn":55},{"ruleId":"90","replacedBy":"103"},{"ruleId":"92","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":85,"column":6,"nodeType":"107","endLine":85,"endColumn":8,"suggestions":"108"},{"ruleId":"90","replacedBy":"109"},{"ruleId":"92","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":7,"column":31,"nodeType":"113","messageId":"114","endLine":7,"endColumn":32},{"ruleId":"96","severity":1,"message":"115","line":132,"column":11,"nodeType":"98","messageId":"99","endLine":132,"endColumn":26},{"ruleId":"105","severity":1,"message":"116","line":88,"column":6,"nodeType":"107","endLine":88,"endColumn":12,"suggestions":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],["118"],["119"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'open' is assigned a value but never used.","'openCloseGroupDialog' is assigned a value but never used.","'setOpenCloseGroupDialog' is assigned a value but never used.",["118"],["119"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'groupVerification'. Either include it or remove the dependency array.","ArrayExpression",["120"],["118"],["119"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'handleClickOpen' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'initialData' and 'initialState'. Either include them or remove the dependency array.",["121"],"no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [groupVerification]",{"range":"126","text":"127"},"Update the dependencies array to be: [initialData, initialState, open]",{"range":"128","text":"129"},[2125,2127],"[groupVerification]",[1975,1981],"[initialData, initialState, open]"]