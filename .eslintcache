[{"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/App.js":"1","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/NavBar/index.js":"2","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/index.js":"3","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/UserIcon/index.js":"4","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/Layout/Home/index.js":"5","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/reportWebVitals.js":"6","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/Layout/Join/index.js":"7","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/Loading/index.js":"8","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/localStorage/groups/index.js":"9","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/api/groups/index.js":"10","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/urls.js":"11","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/utils/general/index.js":"12","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/CreateDialog/index.js":"13","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/NotFound/index.js":"14","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/errors.js":"15","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/ViewMatch/index.js":"16"},{"size":862,"mtime":1607958408501,"results":"17","hashOfConfig":"18"},{"size":1801,"mtime":1607874230677,"results":"19","hashOfConfig":"18"},{"size":500,"mtime":1606939540250,"results":"20","hashOfConfig":"18"},{"size":1232,"mtime":1606946299080,"results":"21","hashOfConfig":"18"},{"size":7157,"mtime":1607960995130,"results":"22","hashOfConfig":"18"},{"size":362,"mtime":1606939540252,"results":"23","hashOfConfig":"18"},{"size":6039,"mtime":1607958386528,"results":"24","hashOfConfig":"18"},{"size":690,"mtime":1607956912738,"results":"25","hashOfConfig":"18"},{"size":255,"mtime":1607448987716,"results":"26","hashOfConfig":"18"},{"size":1077,"mtime":1607959100678,"results":"27","hashOfConfig":"18"},{"size":82,"mtime":1607957119139,"results":"28","hashOfConfig":"18"},{"size":1134,"mtime":1607958555973,"results":"29","hashOfConfig":"18"},{"size":6289,"mtime":1607952005041,"results":"30","hashOfConfig":"18"},{"size":1413,"mtime":1607958662687,"results":"31","hashOfConfig":"18"},{"size":50,"mtime":1607959299971,"results":"32","hashOfConfig":"18"},{"size":5953,"mtime":1607960783369,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1493dwj",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/App.js",[],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/NavBar/index.js",[],["75","76"],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/index.js",[],["77","78"],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/UserIcon/index.js",["79","80"],"import React, { useState } from \"react\"\nimport Menu from \"@material-ui/core/Menu\"\nimport AccountCircle from \"@material-ui/icons/AccountCircle\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\n\n\nconst UserIcon = () => {\n  const [open, setOpen] = useState(false)\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  const handleClose = () =>  setOpen(false);\n\n  const handleMenu = (event) => setAnchorEl(event.currentTarget)\n  \n  return (\n    <div>\n      <IconButton\n        aria-label=\"account of current user\"\n        aria-controls=\"menu-appbar\"\n        aria-haspopup=\"true\"\n        onClick={handleMenu}\n        color=\"inherit\"\n      >\n      <AccountCircle color=\"primary\" />\n      </IconButton>\n      <Menu\n        id=\"menu-appbar\"\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        keepMounted\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        // open={true}\n        onClose={handleClose}\n      >\n        {/* <MenuItem>Profile</MenuItem> */}\n        {/* <MenuItem>SIGN OUT</MenuItem> */}\n      </Menu>\n    </div>\n  )\n}\n\nexport default UserIcon\n","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/Layout/Home/index.js",["81","82"],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/reportWebVitals.js",[],["83","84"],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/Layout/Join/index.js",["85"],"import React from \"react\"\nimport clsx from \"clsx\"\n// material ui imports\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport NavBar from \"../../components/NavBar\"\nimport Container from \"@material-ui/core/Container\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Avatar from \"@material-ui/core/Avatar\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport FormHelperText from \"@material-ui/core/FormHelperText\"\nimport Button from \"@material-ui/core/Button\"\nimport { deepOrange } from \"@material-ui/core/colors\"\n\n// application imports\nimport { addUserToGroup, verifyGroupID } from \"../../api/groups\"\nimport { useHistory } from \"react-router-dom\"\nimport { HOME, PAGE_NOT_FOUND } from \"../../urls\"\nimport Loading from \"../../components/Loading\"\nimport { handleNotification } from \"../../utils/general\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    gap: theme.spacing(2),\n  },\n\n  width: {\n    minWidth: \"100%\",\n  },\n\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  centerAvatar: {\n    margin: \"0 auto\",\n  },\n\n  center: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    gap: theme.spacing(3),\n  },\n\n  centerPage: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}))\n\nexport default function Join(props) {\n  const classes = useStyles()\n\n  const history = useHistory()\n  const groupId = props.match.params.id\n  const [loading, setLoading] = React.useState(true)\n\n  const [value, setValue] = React.useState({\n    userName: \"\",\n    comment: \"\",\n    name: \"\",\n    link: \"\",\n    loading: false,\n    errorMessage: \"\",\n  })\n\n  async function groupVerification() {\n    const verified = await verifyGroupID(groupId)\n    setLoading(false)\n    if (!verified) {\n      history.push(PAGE_NOT_FOUND + \"/INVALID_GROUP_ID_OR_LINK\")\n    }\n  }\n\n  React.useEffect(() => {\n    groupVerification()\n  }, [])\n\n  const handleUserInput = (name) => (event) =>\n    setValue({ ...value, [name]: event.target.value })\n\n  const success = () => {\n    setValue({ ...value, loading: false })\n    handleNotification(\n      \"SUCCESSFUL\",\n      \"You've successfully joined the group\",\n      \"success\"\n    )\n    history.push(HOME)\n  }\n\n  const failed = (message) => {\n    console.log(\"failed\", message)\n    setValue({ ...value, loading: false, errorMessage: message })\n    handleNotification(\"FAILED\", message)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setValue({ ...value, loading: true })\n    if (groupId) {\n      const member = {\n        username: value.userName,\n        comment: value.comment,\n        name: value.name,\n        link: value.link,\n      }\n      addUserToGroup(groupId, member, success, failed)\n    } else {\n      history.push(HOME)\n    }\n  }\n\n  return loading ? (\n    <div className={classes.root}>\n      <NavBar />\n      <div className={classes.centerPage}>\n        <Loading message={\"FETCHING GROUP...\"} />\n      </div>\n    </div>\n  ) : (\n    <div className={classes.root}>\n      <NavBar />\n      <section className={classes.center}>\n        <Avatar className={clsx(classes.orange, classes.centerAvatar)}>N</Avatar>\n        <Container maxWidth=\"sm\">\n          <form onSubmit={handleSubmit}>\n            <FormControl error className={classes.width}>\n              <FormHelperText id=\"component-error-text\">\n                {value.errorMessage}\n              </FormHelperText>\n              <TextField\n                id=\"outlined-full-width-1\"\n                label=\"Username\"\n                placeholder=\"Exwestafrican\"\n                helperText=\"Give yourself a cool name\"\n                fullWidth\n                margin=\"normal\"\n                value={value.userName}\n                onChange={handleUserInput(\"userName\")}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                required\n              />\n\n              <TextField\n                id=\"outlined-multiline-static\"\n                label=\"Prefrence\"\n                multiline\n                rows={4}\n                placeholder=\"A breif description of what you'd like\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                value={value.comment}\n                onChange={handleUserInput(\"comment\")}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                required\n              />\n\n              <TextField\n                id=\"outlined-full-width-2\"\n                label=\"Slack Name\"\n                placeholder=\"tumise\"\n                helperText=\"What do you get called on slack?\"\n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                value={value.name}\n                onChange={handleUserInput(\"name\")}\n                required\n              />\n\n              <TextField\n                id=\"outlined-full-width-3\"\n                label=\"Product Url\"\n                placeholder=\"jumia.com/cool-stuff/99\"\n                helperText=\"share a link to what you'd like\"\n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                value={value.link}\n                onChange={handleUserInput(\"link\")}\n                required\n              />\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disableElevation\n              >\n                {value.loading ? <Loading /> : \"JOIN\"}\n              </Button>\n            </FormControl>\n          </form>\n        </Container>\n      </section>\n    </div>\n  )\n}\n","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/Loading/index.js",[],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/localStorage/groups/index.js",[],["86","87"],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/api/groups/index.js",["88"],"import axios from \"axios\"\n\nconst baseUrl = \"https://weepair.herokuapp.com/api/\"\n\nexport function addUserToGroup(groupID, member, success, failed) {\n  return axios\n    .post(baseUrl + \"members\" + \"/\" + groupID + \"/\", member)\n    .then((res) => success())\n    .catch((err) => failed(err.response.data.message))\n}\n\nexport function viewMatch(details, success, failed) {\n  return axios\n    .post(baseUrl + \"members/partner/\", details)\n    .then((res) => {\n      const { comment, link, name } = res.data.partner\n      success(name, comment, link)\n    })\n    .catch((err) => failed(err.response.data.message))\n}\n\nexport function createGroup(details, success, failed) {\n  return axios\n    .post(baseUrl + \"groups\", details)\n    .then((res) => {\n      const groupID = res.data.data.group.groupID\n      success(groupID)\n    })\n    .catch((err) => failed(err.response.data.message))\n}\n\nexport function verifyGroupID(groupID) {\n  return axios\n    .get(baseUrl + \"groups/\" + groupID)\n    .then((res) => res.data.success)\n    .catch((err) => err.response.data.success)\n}\n\n// verify group id\n","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/urls.js",[],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/utils/general/index.js",[],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/CreateDialog/index.js",["89"],"import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport clsx from \"clsx\"\n\n\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\"\nimport Button from \"@material-ui/core/Button\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\n\nimport { Link, useHistory } from \"react-router-dom\"\n\nimport { createGroup } from \"../../api/groups\"\nimport { HOME, JOIN } from \"../../urls\"\nimport {\n  handleNotification,\n  copyToClipboard,\n  generateGroupLink,\n} from \"../../utils/general\"\nimport Loading from \"../Loading\"\nimport teal from \"@material-ui/core/colors/teal\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  centerText: {\n    textAlign: \"center\",\n  },\n\n  root: {\n    \"& .MuiInputBase-input\": {\n      textAlign: \"center\",\n    },\n  },\n\n  listRoot: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n\n  inline: {\n    display: \"inline-block\",\n    backgroundColor: \"blue\",\n  },\n\n  pointer: {\n    cursor: \"pointer\",\n  },\n\n  MuiInputUnderline: {\n    \"&::before\": {\n      // remove dotted lines\n      content: \"none\",\n    },\n  },\n  MuiInputBaseInput: {\n    textAlign: \"center\",\n  },\n\n  centerBlock: {\n    display: \"block\",\n    textAlign: \"center\",\n  },\n  normalizeLink: {\n    color: \"inherit\",\n    textDecoration: \"none\",\n    \"&:hover\": {\n      color: \"inherit\",\n      textDecoration: \"none\",\n    },\n  },\n}))\n\nexport default function CreateDialog({open, handleClose }) {\n  const history = useHistory()\n  const [data, setData] = React.useState({\n    username: \"\",\n    name: \"\",\n  })\n  const text = React.useRef(null)\n\n  const [state, setState] = React.useState({\n    created: false,\n    loading: false,\n    groupId: \"\",\n  })\n\n  const handleUserInput = (name) => (event) =>\n    setData({ ...data, [name]: event.target.value })\n\n  const success = (groupID) => {\n    console.log(\"success\")\n    setState({\n      ...state,\n      created: true,\n      loading: false,\n      groupId: groupID,\n    })\n  }\n\n  const failed = (message) => {\n    handleNotification(\"ERROR\", message)\n    history.push(HOME)\n  }\n\n  const handleCreateGroup = () => {\n    setState({\n      ...state,\n      loading: true,\n    })\n    createGroup(data, success, failed)\n  }\n\n  const clearGroupID = () => {\n    setState({\n      ...state,\n      created: false,\n      groupId: \"\",\n    })\n    handleClose()\n  }\n\n  function GroupCreated({ clearGroupID, groupId }) {\n    const classes = useStyles()\n    const [open, setOpen] = React.useState(true)\n\n    const handleClickOpen = () => {\n      setOpen(true)\n    }\n\n    return (\n      <div>\n        <Dialog\n          open={open}\n          fullWidth={true}\n          // onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            <div className={classes.centerText}>{\"Please copy your Wee link\"}</div>\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              <TextField\n                id=\"outlined-read-only-input\"\n                defaultValue={generateGroupLink(groupId)}\n                disabled\n                onClick={(e) => {\n                  copyToClipboard(text)\n                }}\n                fullWidth={true}\n                multiline\n                inputRef={text}\n                InputProps={{\n                  readOnly: true,\n                  endAdornment: document.queryCommandSupported(\"copy\") && (\n                    <InputAdornment position=\"end\">\n                      <FileCopyIcon />\n                    </InputAdornment>\n                  ),\n                  style: {\n                    cursor: \"pointer\",\n                    fontWeight: \"400\",\n                    color: teal[\"500\"],\n                  },\n                  className: classes.MuiInputUnderline,\n                }}\n                className={clsx(classes.pointer, classes.root)}\n              />\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={clearGroupID} color=\"primary\">\n              <Link to={JOIN + \"/\" + groupId} className={classes.normalizeLink}>\n                JOIN GROUP\n              </Link>\n            </Button>\n            <Button onClick={clearGroupID} color=\"primary\">\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n\n  return state.created ? (\n    <GroupCreated clearGroupID={clearGroupID} groupId={state.groupId} />\n  ) : (\n    <div>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Create Group</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            please enter your prefred username and group name, give us a couple\n            seconds and your group id will be generated.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"normal\"\n            id=\"name\"\n            label=\"User Name\"\n            type=\"text\"\n            fullWidth\n            value={data.username}\n            required\n            onChange={handleUserInput(\"username\")}\n          />\n          <TextField\n            margin=\"normal\"\n            id=\"name\"\n            label=\"Group Name\"\n            type=\"text\"\n            fullWidth\n            value={data.name}\n            required\n            onChange={handleUserInput(\"name\")}\n          />\n        </DialogContent>\n        <DialogActions>\n          {state.loading ? (\n            <Loading />\n          ) : (\n            <React.Fragment>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button onClick={handleCreateGroup} color=\"primary\">\n                Create\n              </Button>\n            </React.Fragment>\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/NotFound/index.js",[],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/errors.js",[],"/Users/tumise/Documents/Just_django/git_test_stuff/weepair2/src/components/ViewMatch/index.js",["90"],"import React from \"react\"\n// material ui imports\nimport Button from \"@material-ui/core/Button\"\nimport CheckIcon from \"@material-ui/icons/Check\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport Fab from \"@material-ui/core/Fab\"\nimport { green } from \"@material-ui/core/colors\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { Typography } from \"@material-ui/core\"\n\n// relative imports\nimport Loading from \"../Loading\"\nimport { viewMatch } from \"../../api/groups\"\n\n// 3rd party\nimport { handleNotification, generateGroupId } from \"../../utils/general\"\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    display: \"inline\",\n  },\n\n  removeDecoration: {\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"none\",\n    },\n  },\n\n  buttonProgress: {\n    backgroundColor: green[500],\n    width: \"8rem\",\n    height: \"8rem\",\n    marginBottom: theme.spacing(3),\n    \"&:hover\": {\n      backgroundColor: green[500],\n    },\n  },\n\n  fab: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n\n  height: {\n    width: \"100%\",\n    height: \"10rem\",\n  },\n\n  center: {\n    textAlign: \"center\",\n  },\n}))\nexport default function ViewMatch({ open, handleClose }) {\n  const classes = useStyles()\n\n  const initialData = {\n    username: \"\",\n    groupID: \"\",\n  }\n  const [data, setData] = React.useState({\n    ...initialData\n  })\n\n  const initialState = {\n    loading: false,\n    pairInfo: false,\n    partnerInfo: {\n      name: \"\",\n      comment: \"\",\n      link: \"\",\n    },\n  }\n\n  const [state, setState] = React.useState({\n    ...initialState,\n  })\n\n  React.useEffect(() => {\n    setState({ ...initialState })\n    setData({...initialData})\n  }, [open])\n\n  const loadData = () => {\n    setState({ ...state, loading: true })\n    const details = {\n      username: data.username,\n      groupID: generateGroupId(data.groupID),\n    }\n    viewMatch(details, success, failed)\n  }\n\n  const handleUserInput = (name) => (event) =>\n    setData({ ...data, [name]: event.target.value })\n\n  const success = (name, comment, link) => {\n    setState({\n      ...state,\n      loading: false,\n      pairInfo: true,\n      partnerInfo: {\n        name,\n        comment,\n        link,\n      },\n    })\n    handleNotification(\"CONGRATULATIONS\", \"You've got a match!!\", \"success\")\n  }\n  const failed = (message) => {\n    handleNotification(\"FAILED\", message)\n    setState({ ...state, loading: false })\n  }\n\n  const PairInfo = ({ name, comment, link }) => {\n    return (\n      <Dialog\n        fullWidth={true}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <div className={classes.wrapper}>\n          <DialogContent>\n            <DialogContentText>\n              <div className={classes.fab}>\n                <Fab\n                  aria-label=\"save\"\n                  color=\"primary\"\n                  className={classes.buttonProgress}\n                  size={\"large\"}\n                >\n                  <CheckIcon style={{ fontSize: 60 }} />\n                </Fab>\n              </div>\n              <div className={classes.center}>\n                You've were paired with{\" \"}\n                <Typography className={classes.title} variant=\"h6\">\n                  {name}{\" \"}\n                </Typography>\n                he dropped the following comments:{\" \"}\n                <Typography className={classes.title} variant=\"p\">\n                  {comment}{\" \"}\n                </Typography>\n                {link ? (\n                  <Typography className={classes.title} variant=\"p\">\n                    and suggested you view this{\" \"}\n                    <a\n                      target=\"_blank\"\n                      className={classes.removeDecoration}\n                      href={\"https://\" + link}\n                      rel=\"noopener noreferrer\"\n                    >\n                      LINK\n                    </a>\n                  </Typography>\n                ) : (\n                  \".\"\n                )}\n              </div>\n            </DialogContentText>\n          </DialogContent>\n        </div>\n      </Dialog>\n    )\n  }\n  //\n\n  return state.pairInfo ? (\n    <PairInfo\n      name={state.partnerInfo.name}\n      comment={state.partnerInfo.comment}\n      link={state.partnerInfo.link}\n    />\n  ) : (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Find Match</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          To find out who you've been matched with, please enter your usernname and\n          group id. We'll get that info in a minute.\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"normal\"\n          id=\"name\"\n          label=\"User Name\"\n          type=\"text\"\n          fullWidth\n          value={data.username}\n          required\n          onChange={handleUserInput(\"username\")}\n        />\n        <TextField\n          margin=\"normal\"\n          id=\"name\"\n          label=\"Group ID or Link\"\n          type=\"text\"\n          fullWidth\n          required\n          value={data.groupID}\n          onChange={handleUserInput(\"groupID\")}\n        />\n      </DialogContent>\n      <DialogActions>\n        {state.loading ? (\n          <div style={{ margin: \"0 auto\" }}>\n            <Loading />\n          </div>\n        ) : (\n          <React.Fragment>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={loadData} color=\"primary\">\n              Find\n            </Button>\n          </React.Fragment>\n        )}\n      </DialogActions>\n    </Dialog>\n  )\n}\n",{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"91","replacedBy":"95"},{"ruleId":"93","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":16},{"ruleId":"97","severity":1,"message":"101","line":9,"column":10,"nodeType":"99","messageId":"100","endLine":9,"endColumn":14},{"ruleId":"97","severity":1,"message":"102","line":115,"column":10,"nodeType":"99","messageId":"100","endLine":115,"endColumn":30},{"ruleId":"97","severity":1,"message":"103","line":115,"column":32,"nodeType":"99","messageId":"100","endLine":115,"endColumn":55},{"ruleId":"91","replacedBy":"104"},{"ruleId":"93","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":85,"column":6,"nodeType":"108","endLine":85,"endColumn":8,"suggestions":"109"},{"ruleId":"91","replacedBy":"110"},{"ruleId":"93","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":7,"column":31,"nodeType":"114","messageId":"115","endLine":7,"endColumn":32},{"ruleId":"97","severity":1,"message":"116","line":132,"column":11,"nodeType":"99","messageId":"100","endLine":132,"endColumn":26},{"ruleId":"106","severity":1,"message":"117","line":88,"column":6,"nodeType":"108","endLine":88,"endColumn":12,"suggestions":"118"},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],["119"],["120"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'open' is assigned a value but never used.","'openCloseGroupDialog' is assigned a value but never used.","'setOpenCloseGroupDialog' is assigned a value but never used.",["119"],["120"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'groupVerification'. Either include it or remove the dependency array.","ArrayExpression",["121"],["119"],["120"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'handleClickOpen' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'initialData' and 'initialState'. Either include them or remove the dependency array.",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [groupVerification]",{"range":"127","text":"128"},"Update the dependencies array to be: [initialData, initialState, open]",{"range":"129","text":"130"},[2125,2127],"[groupVerification]",[1975,1981],"[initialData, initialState, open]"]